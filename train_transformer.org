#+auto_tangle: t
#+EXPORT_FILE_NAME: train_transformer
* Transformer
:PROPERTIES:
:header-args: :exports both :session video-frame-transformer :eval no-export :results raw :async yes :tangle train_transformer.py
:END:
** Libraries
#+begin_src jupyter-python :results silent
from models import ParticlePredictor, ConvolutionalAutoencoder
from data import create_sequence_generator
from callbacks import LogImageSequenceCallback
import tensorflow as tf
import tensorflow.keras as keras

import numpy as np

import datetime
import matplotlib.pyplot as plt
#+end_src

** Parameters
#+begin_src jupyter-python :results silent
lr = 1e-3
steps_per_epoch = 20
image_size = 64
batch_size = 16
prior_len = 8
truth_len = 1
code_dim = 64
video_dataset = create_sequence_generator(image_size, batch_size, prior_len, truth_len)
#+end_src


** Train
#+begin_src jupyter-python
autoencoder = keras.models.load_model(
    f"trained_models/autoencoder_dim_{code_dim}/model/",
)
autoencoder.trainable = False
video_dataset = create_sequence_generator(image_size, batch_size, prior_len, truth_len)

log_dir = f'logs/predictor_{code_dim}_{datetime.datetime.now().strftime("%Y%m%d-%H%M%S")}'
tensorboard_callback = tf.keras.callbacks.TensorBoard(log_dir=log_dir, histogram_freq=1, update_freq='batch')

x, y = next(video_dataset)
prior = tf.convert_to_tensor(x[0])
truth = tf.convert_to_tensor(y[0])
image_callback = LogImageSequenceCallback(log_dir, prior, truth)

model = ParticlePredictor(autoencoder, code_dim, prior_len, truth_len, 256, 256, n_heads=8, ff_dim=256, filt_dim=code_dim+2)
model.build(input_shape=(None, prior_len, code_dim))
optimizer = keras.optimizers.Adam(learning_rate=lr)
model.compile(
    optimizer=optimizer,
    loss=keras.losses.MeanSquaredError(),
    run_eagerly=False)

model.fit(
    video_dataset,
    epochs=40,
    steps_per_epoch=steps_per_epoch,
    callbacks=[
        image_callback,
        tensorboard_callback,
    ]
)

model.save(f'trained_models/predictor')
#+end_src

#+RESULTS:
:RESULTS:
# [goto error]
:
: NameErrorTraceback (most recent call last)
: <ipython-input-1-0b13299a5b4a> in <module>
: ----> 1 autoencoder = keras.models.load_model(
:       2     f"trained_models/autoencoder_dim_{code_dim}/model/",
:       3 )
:       4 autoencoder.trainable = False
:       5 video_dataset = create_sequence_generator(image_size, batch_size, prior_len, truth_len)
:
: NameError: name 'keras' is not defined
:END:
